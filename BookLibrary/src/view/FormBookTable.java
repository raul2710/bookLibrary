package view;

import controller.BookDAO;
import java.awt.Dimension;
import java.util.List;
import javax.swing.ButtonGroup;
import javax.swing.DefaultButtonModel;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.BookInformation;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Raul
 */
public class FormBookTable extends javax.swing.JInternalFrame {

    /**
     * Creates new form FormBookTable
     */
    public FormBookTable() {
        initComponents();

        this.setTitle("Pesquisa de livros");
        this.setResizable(false);
        this.setMaximizable(false);
        this.setIconifiable(false);
        this.setClosable(true);

        configureTable();

        //fillTable("", "title");
        configureButtonGroup();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tabBooks = new javax.swing.JTable();
        btnAboutBook = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        rdbTitle = new javax.swing.JRadioButton();
        rdbPublisher = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();
        rdbAuthor = new javax.swing.JRadioButton();
        rdbIsbn = new javax.swing.JRadioButton();
        jButton2 = new javax.swing.JButton();
        btnSearch = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        rdbGenre = new javax.swing.JRadioButton();

        addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                formFocusGained(evt);
            }
        });

        tabBooks.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabBooks.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabBooksMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabBooks);

        btnAboutBook.setText("Saiba mais...");
        btnAboutBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAboutBookActionPerformed(evt);
            }
        });

        jLabel1.setText("Pesquisar:");

        rdbTitle.setText("Titulo");
        rdbTitle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbTitleActionPerformed(evt);
            }
        });

        rdbPublisher.setText("Editora");
        rdbPublisher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbPublisherActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setText("Pesquisar na Biblioteca Virtual");

        rdbAuthor.setText("Autor");
        rdbAuthor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbAuthorActionPerformed(evt);
            }
        });

        rdbIsbn.setText("Isbn");
        rdbIsbn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbIsbnActionPerformed(evt);
            }
        });

        jButton2.setText("Voltar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        btnSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Search.png"))); // NOI18N
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/BookSearch.png"))); // NOI18N

        rdbGenre.setText("GÃªnero");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(26, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(6, 6, 6)
                                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnSearch)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(rdbGenre)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(rdbTitle)
                                        .addGap(6, 6, 6)
                                        .addComponent(rdbPublisher)
                                        .addGap(6, 6, 6)
                                        .addComponent(rdbAuthor)
                                        .addGap(6, 6, 6)
                                        .addComponent(rdbIsbn)))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 61, Short.MAX_VALUE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton2)
                                .addGap(18, 18, 18)
                                .addComponent(btnAboutBook))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 687, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 3, Short.MAX_VALUE)))
                .addGap(39, 39, 39))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(37, 37, 37)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addComponent(jLabel1))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(rdbTitle)
                                    .addComponent(rdbPublisher)
                                    .addComponent(rdbAuthor)
                                    .addComponent(rdbIsbn))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(txtSearch)
                                    .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rdbGenre))
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton2)
                    .addComponent(btnAboutBook))
                .addContainerGap(65, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAboutBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAboutBookActionPerformed
        // TODO add your handling code here:
        int row = tabBooks.getSelectedRow();
        int id = Integer.parseInt(
            tabBooks.getValueAt(row, 0).toString()
        );
        try {
            openForm(new FormAboutBook(id));
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Selecione algum livro!!", "Error", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_btnAboutBookActionPerformed

    private void rdbTitleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbTitleActionPerformed
        // TODO add your handling code here:  
    }//GEN-LAST:event_rdbTitleActionPerformed

    private void rdbPublisherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbPublisherActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdbPublisherActionPerformed

    private void rdbAuthorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbAuthorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdbAuthorActionPerformed

    private void rdbIsbnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbIsbnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdbIsbnActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
        initTableWithoutRow();
        ButtonGroup group = ((DefaultButtonModel) rdbAuthor.getModel()).getGroup();

        try {
            if (rdbGenre.isSelected()) {
                fillTable(txtSearch.getText(), "genre.name");
            } else if (rdbPublisher.isSelected()) {
                fillTable(txtSearch.getText(), "publisher.name");
            } else if (rdbAuthor.isSelected()) {
                fillTable(txtSearch.getText(), "author.name");
            } else {
                fillTable(txtSearch.getText(), "title");
            }

            if (tabBooks.getRowCount() == 0) {
                JOptionPane.showMessageDialog(null, "Nenhum livro encontrado", "Resultado", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Digite algo para pesquisar", "Error", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_btnSearchActionPerformed

    private void tabBooksMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabBooksMouseClicked
        //Double click
        if (evt.getClickCount() == 2) {
            //Descobrir a linha selecionada
            int linha = tabBooks.getSelectedRow();

            //Recuperar o ID selecionado
            int id = Integer.parseInt(
                    tabBooks.getValueAt(linha, 0).toString()
            );

            //Abrir o FormCadastro
            FormRegisterBook f = new FormRegisterBook(id);
            this.getDesktopPane().add(f);
            f.setVisible(true);

            //Fechar o FormPesquisa
            //this.dispose();
        }
    }//GEN-LAST:event_tabBooksMouseClicked

    private void formFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_formFocusGained

    }//GEN-LAST:event_formFocusGained


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAboutBook;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton rdbAuthor;
    private javax.swing.JRadioButton rdbGenre;
    private javax.swing.JRadioButton rdbIsbn;
    private javax.swing.JRadioButton rdbPublisher;
    private javax.swing.JRadioButton rdbTitle;
    private javax.swing.JTable tabBooks;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables

    private void configureButtonGroup() {

        ButtonGroup bg = new ButtonGroup();

        bg.add(rdbTitle);
        bg.add(rdbPublisher);
        bg.add(rdbAuthor);
        bg.add(rdbGenre);
        bg.add(rdbIsbn);
        rdbTitle.setSelected(true);
    }

    private void fillTable(String search, String where) {

        List<BookInformation> listBookInfo = new BookDAO().listBookInformation(where, search);

        if (listBookInfo.size() > 0) {
            DefaultTableModel m = (DefaultTableModel) tabBooks.getModel();
            for (BookInformation bInfo : listBookInfo) {
                m.addRow(new Object[]{
                    bInfo.getId(),
                    bInfo.getIsbn(),
                    bInfo.getTitle(),
                    bInfo.getGenre(),
                    bInfo.getAuthor(),
                    bInfo.getPublisher(),
                    bInfo.getEdition()
                });
            }
            tabBooks.setModel(m);
        } else {
            JOptionPane.showMessageDialog(
                    null, "Nenhum registro encontrado."
            );
        }
    }

    private void configureTable() {
        DefaultTableModel m = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        m.addColumn("Id");
        m.addColumn("Isbn");
        m.addColumn("TÃ­tulo");
        m.addColumn("GÃªnero");
        m.addColumn("Editora");
        m.addColumn("Autor");
        m.addColumn("EdiÃ§Ã£o");

        m.setNumRows(0);
        tabBooks.setModel(m);
    }

    private void initTableWithoutRow() {
        DefaultTableModel m = (DefaultTableModel) tabBooks.getModel();
        m.setNumRows(0);
        tabBooks.setModel(m);
    }

    public void openForm(JInternalFrame f) {

        Dimension d = getParent().getSize();
        getParent().add(f);
        f.setLocation(
                (d.width - f.getWidth()) / 2,
                (d.height - f.getHeight()) / 2
        );
        f.setVisible(true);

        this.dispose();
    }
}
