package view;

import controller.BookDAO;
import java.awt.Dimension;
import java.awt.event.KeyEvent;
import java.util.List;
import javax.swing.ButtonGroup;
import javax.swing.DefaultButtonModel;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.BookInformation;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Raul
 */
public class FormBookTable extends javax.swing.JInternalFrame {

    /**
     * Creates new form FormBookTable
     */
    public FormBookTable() {
        initComponents();

        this.setTitle("Pesquisa de livros");
        this.setResizable(false);
        this.setMaximizable(false);
        this.setIconifiable(false);
        this.setClosable(true);

        configureTable();

        //fillTable("", "title");
        configureButtonGroup();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tabBooks = new javax.swing.JTable();
        btnAboutBook = new javax.swing.JButton();
        lblPesquisar = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        rdbTitle = new javax.swing.JRadioButton();
        rdbPublisher = new javax.swing.JRadioButton();
        lblTitulo = new javax.swing.JLabel();
        rdbAuthor = new javax.swing.JRadioButton();
        rdbIsbn = new javax.swing.JRadioButton();
        btnBack = new javax.swing.JButton();
        btnSearch = new javax.swing.JButton();
        lblImage = new javax.swing.JLabel();
        rdbGenre = new javax.swing.JRadioButton();

        addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                formFocusGained(evt);
            }
        });
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameActivated(evt);
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        tabBooks.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabBooks.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabBooksMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabBooks);

        btnAboutBook.setText("Saiba mais...");
        btnAboutBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAboutBookActionPerformed(evt);
            }
        });

        lblPesquisar.setText("Pesquisar:");

        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
        });

        rdbTitle.setText("Titulo");
        rdbTitle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbTitleActionPerformed(evt);
            }
        });

        rdbPublisher.setText("Editora");
        rdbPublisher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbPublisherActionPerformed(evt);
            }
        });

        lblTitulo.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblTitulo.setText("Pesquisar na Biblioteca Virtual");

        rdbAuthor.setText("Autor");
        rdbAuthor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbAuthorActionPerformed(evt);
            }
        });

        rdbIsbn.setText("Isbn");
        rdbIsbn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbIsbnActionPerformed(evt);
            }
        });

        btnBack.setText("Voltar");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Search.png"))); // NOI18N
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        lblImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/BookSearch.png"))); // NOI18N

        rdbGenre.setText("GÃªnero");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblTitulo)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblPesquisar)
                                .addGap(6, 6, 6)
                                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnSearch))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(rdbTitle)
                                .addGap(6, 6, 6)
                                .addComponent(rdbPublisher)
                                .addGap(6, 6, 6)
                                .addComponent(rdbAuthor)
                                .addGap(6, 6, 6)
                                .addComponent(rdbIsbn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(rdbGenre)))
                        .addGap(261, 261, 261)
                        .addComponent(lblImage, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(btnBack)
                            .addGap(18, 18, 18)
                            .addComponent(btnAboutBook))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 687, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(53, 53, 53))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(30, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblTitulo)
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addComponent(lblPesquisar))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(txtSearch)
                                .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rdbTitle)
                            .addComponent(rdbPublisher)
                            .addComponent(rdbAuthor)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(rdbIsbn)
                                .addComponent(rdbGenre))))
                    .addComponent(lblImage, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnBack)
                    .addComponent(btnAboutBook))
                .addGap(23, 23, 23))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAboutBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAboutBookActionPerformed
        // TODO add your handling code here:
        int row = tabBooks.getSelectedRow();
        int id = Integer.parseInt(
            tabBooks.getValueAt(row, 0).toString()
        );
        try {
            openForm(new FormAboutBook(id));
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Selecione algum livro!!", "Error", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_btnAboutBookActionPerformed

    private void rdbTitleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbTitleActionPerformed
        // TODO add your handling code here:  
    }//GEN-LAST:event_rdbTitleActionPerformed

    private void rdbPublisherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbPublisherActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdbPublisherActionPerformed

    private void rdbAuthorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbAuthorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdbAuthorActionPerformed

    private void rdbIsbnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbIsbnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdbIsbnActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
        initTableWithoutRow();

        try {
            if (rdbGenre.isSelected())
                fillTable(txtSearch.getText(), "genre.name");
            else if (rdbPublisher.isSelected())
                fillTable(txtSearch.getText(), "publisher.name");
            else if (rdbAuthor.isSelected())
                fillTable(txtSearch.getText(), "author.name");
            else 
                fillTable(txtSearch.getText(), "title");

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Digite algo para pesquisar", "Error", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_btnSearchActionPerformed

    private void tabBooksMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabBooksMouseClicked
        //Double click
        if (evt.getClickCount() == 2) {
            //Descobrir a linha selecionada
            int linha = tabBooks.getSelectedRow();

            //Recuperar o ID selecionado
            int id = Integer.parseInt(
                    tabBooks.getValueAt(linha, 0).toString()
            );

            //Abrir o FormCadastro
            FormRegisterBook f = new FormRegisterBook(id);
            this.getDesktopPane().add(f);
            f.setVisible(true);

            //Fechar o FormPesquisa
            //this.dispose();
        }
    }//GEN-LAST:event_tabBooksMouseClicked

    private void formFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_formFocusGained

    }//GEN-LAST:event_formFocusGained

    private void formInternalFrameActivated(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameActivated
        // TODO add your handling code here:
        this.btnSearchActionPerformed(null);
    }//GEN-LAST:event_formInternalFrameActivated

    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (txtSearch.getText().isEmpty()) {
                JOptionPane.showMessageDialog(
                    null, "Informe o critÃ©rio de pesquisa."
                );
                
            } else {
                try {
                    initTableWithoutRow();
                    if (rdbGenre.isSelected())
                        fillTable(txtSearch.getText(), "genre.name");
                    else if (rdbPublisher.isSelected())
                        fillTable(txtSearch.getText(), "publisher.name");
                    else if (rdbAuthor.isSelected())
                        fillTable(txtSearch.getText(), "author.name");
                    else 
                        fillTable(txtSearch.getText(), "title");

                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, "Digite algo para pesquisar", "Error", JOptionPane.ERROR_MESSAGE);
                }  
            }
        }  
    }//GEN-LAST:event_txtSearchKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAboutBook;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnSearch;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblImage;
    private javax.swing.JLabel lblPesquisar;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JRadioButton rdbAuthor;
    private javax.swing.JRadioButton rdbGenre;
    private javax.swing.JRadioButton rdbIsbn;
    private javax.swing.JRadioButton rdbPublisher;
    private javax.swing.JRadioButton rdbTitle;
    private javax.swing.JTable tabBooks;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables

    private void configureButtonGroup() {

        ButtonGroup bg = new ButtonGroup();

        bg.add(rdbTitle);
        bg.add(rdbPublisher);
        bg.add(rdbAuthor);
        bg.add(rdbGenre);
        bg.add(rdbIsbn);
        rdbTitle.setSelected(true);
    }

    private void fillTable(String search, String where) {

        List<BookInformation> listBookInfo = new BookDAO().listBookInformation(where, search);

        if (listBookInfo.size() > 0) {
            DefaultTableModel m = (DefaultTableModel) tabBooks.getModel();
            for (BookInformation bInfo : listBookInfo) {
                m.addRow(new Object[]{
                    bInfo.getId(),
                    bInfo.getIsbn(),
                    bInfo.getTitle(),
                    bInfo.getGenre(),
                    bInfo.getAuthor(),
                    bInfo.getPublisher(),
                    bInfo.getEdition()
                });
            }
            tabBooks.setModel(m);
        } else {
            JOptionPane.showMessageDialog(
                    null, "Nenhum registro encontrado."
            );
        }
    }

    private void configureTable() {
        DefaultTableModel m = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        m.addColumn("Id");
        m.addColumn("Isbn");
        m.addColumn("TÃ­tulo");
        m.addColumn("GÃªnero");
        m.addColumn("Autor");
        m.addColumn("Editora");
        m.addColumn("EdiÃ§Ã£o");

        m.setNumRows(0);
        tabBooks.setModel(m);
    }

    private void initTableWithoutRow() {
        DefaultTableModel m = (DefaultTableModel) tabBooks.getModel();
        m.setNumRows(0);
        tabBooks.setModel(m);
    }

    public void openForm(JInternalFrame f) {

        Dimension d = getParent().getSize();
        getParent().add(f);
        f.setLocation(
                (d.width - f.getWidth()) / 2,
                (d.height - f.getHeight()) / 2
        );
        f.setVisible(true);

        this.dispose();
    }
}
