/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.LoanDAO;
import java.awt.event.KeyEvent;
import java.util.List;
import javax.swing.ButtonGroup;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Loan;

/**
 *
 * @loan Raul
 */
public class FormLoanTable extends javax.swing.JInternalFrame {

    /**
     * Creates new form FormTableUpdate
     */
    public FormLoanTable() {
        initComponents();
        
        this.setTitle("Tabela de empréstimos");
        this.setResizable(false);
        this.setMaximizable(false);
        this.setIconifiable(false);
        this.setClosable(true);

        configureTable();
        
        List<Loan> loanListId = new LoanDAO().listById();
        fillTable(loanListId);
        
        configureButtonGroup();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rdbId = new javax.swing.JRadioButton();
        lblPesquisar = new javax.swing.JLabel();
        lblTitulo = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabLoan = new javax.swing.JTable();
        btnBack = new javax.swing.JButton();
        rbnAvailable = new javax.swing.JRadioButton();
        rbnNotAvailable = new javax.swing.JRadioButton();
        txtSearch = new javax.swing.JTextField();
        rdbUser = new javax.swing.JRadioButton();
        rdbBook = new javax.swing.JRadioButton();

        addHierarchyListener(new java.awt.event.HierarchyListener() {
            public void hierarchyChanged(java.awt.event.HierarchyEvent evt) {
                formHierarchyChanged(evt);
            }
        });
        addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                formAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                formFocusGained(evt);
            }
        });
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameActivated(evt);
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosing(evt);
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameIconified(evt);
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        rdbId.setText("Id");
        rdbId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbIdActionPerformed(evt);
            }
        });

        lblPesquisar.setText("Pesquisar:");

        lblTitulo.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblTitulo.setText("Empréstimos de livros");

        tabLoan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabLoan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabLoanMouseClicked(evt);
            }
        });
        tabLoan.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tabLoanKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tabLoan);

        btnBack.setText("Voltar");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        rbnAvailable.setText("Disponível");
        rbnAvailable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbnAvailableActionPerformed(evt);
            }
        });

        rbnNotAvailable.setText("Emprestado");
        rbnNotAvailable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbnNotAvailableActionPerformed(evt);
            }
        });

        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
        });

        rdbUser.setText("Id Usuário");

        rdbBook.setText("Id Livro");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnBack))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblPesquisar)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(rdbId))
                                    .addComponent(lblTitulo))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(rdbUser)
                                    .addComponent(rdbBook))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(rbnNotAvailable)
                                    .addComponent(rbnAvailable)))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 678, Short.MAX_VALUE))))
                .addGap(50, 50, 50))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(lblTitulo)
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblPesquisar)
                            .addComponent(txtSearch)
                            .addComponent(rdbId)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(rbnAvailable)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rbnNotAvailable))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(rdbUser)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rdbBook)))))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnBack)
                .addGap(25, 25, 25))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void rdbIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdbIdActionPerformed

    private void tabLoanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabLoanMouseClicked
        //Double click
        if (evt.getClickCount() == 2) {
            //Descobrir a linha selecionada
            int linha = tabLoan.getSelectedRow();

            //Recuperar o ID selecionado
            int id = Integer.parseInt(
                tabLoan.getValueAt(linha, 0).toString()
            );

            //Abrir o FormCadastro
            FormLoanBook f = new FormLoanBook(id);
            this.getDesktopPane().add(f);
            f.setVisible(true);

            //Fechar o FormPesquisa
            //this.dispose();
        }
    }//GEN-LAST:event_tabLoanMouseClicked

    private void formFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_formFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_formFocusGained

    private void formInternalFrameActivated(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameActivated
        // TODO add your handling code here:
        //this.txtSearchKeyReleased(new KeyEvent(this, 0, 0, 0, KeyEvent.VK_ENTER));
    }//GEN-LAST:event_formInternalFrameActivated

    private void tabLoanKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tabLoanKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_tabLoanKeyReleased

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btnBackActionPerformed

    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (txtSearch.getText().isEmpty()) {
                JOptionPane.showMessageDialog(
                    null, "Informe o critério de pesquisa."
                );
            } else {
                try {
                    if(rdbUser.isSelected()){
                        configureTable();
                        List<Loan> lista = new LoanDAO()
                            .searchByUserId(Integer.parseInt(txtSearch.getText()));
                        if (lista.size() > 0) {
                            DefaultTableModel m = (DefaultTableModel) tabLoan.getModel();
                            for (Loan loan : lista) {
                                m.addRow(new Object[]{
                                    loan.getId(),
                                    loan.getDateBorrow(),
                                    loan.getDateReturn(),
                                    loan.getId_book(),
                                    loan.getId_user(),
                                    loan.getStatus()

                                });
                            }
                                tabLoan.setModel(m);
                        } else {
                            JOptionPane.showMessageDialog(
                                null, "Nenhum registro encontrado."
                            );
                            }   
                        }
                    else if(rdbBook.isSelected()){
                        configureTable();
                        List<Loan> lista = new LoanDAO()
                            .searchByBookId(Integer.parseInt(txtSearch.getText()));
                        if (lista.size() > 0) {
                            DefaultTableModel m = (DefaultTableModel) tabLoan.getModel();
                            for (Loan loan : lista) {
                                m.addRow(new Object[]{
                                    loan.getId(),
                                    loan.getDateBorrow(),
                                    loan.getDateReturn(),
                                    loan.getId_book(),
                                    loan.getId_user(),
                                    loan.getStatus()

                                });
                            }
                                tabLoan.setModel(m);
                        } else {
                            JOptionPane.showMessageDialog(
                                null, "Nenhum registro encontrado."
                            );
                        } 
                    }
                    else{
                        configureTable();
                        Loan loan = new LoanDAO()
                            .searchById(Integer.parseInt(txtSearch.getText()));
                        if (loan != null) {
                            DefaultTableModel m = (DefaultTableModel) tabLoan.getModel();

                            m.addRow(new Object[]{
                                loan.getId(),
                                loan.getDateBorrow(),
                                loan.getDateReturn(),
                                loan.getId_book(),
                                loan.getId_user(),
                                loan.getStatus()
                            });

                            tabLoan.setModel(m);
                        } else {
                            JOptionPane.showMessageDialog(
                                null, "Nenhum registro encontrado."
                            );
                        } 
                    }
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(
                            null, "Digite apenas números."
                        );        
                }
            }
        } 
    }//GEN-LAST:event_txtSearchKeyReleased

    private void rbnAvailableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbnAvailableActionPerformed
        // TODO add your handling code here:

        configureTable();
        List<Loan> lista = new LoanDAO()
            .searchByStatusReturned();
        if (lista.size() > 0) {
            DefaultTableModel m = (DefaultTableModel) tabLoan.getModel();
            for (Loan loan : lista) {
                m.addRow(new Object[]{
                    loan.getId(),
                    loan.getDateBorrow(),
                    loan.getDateReturn(),
                    loan.getId_book(),
                    loan.getId_user(),
                    loan.getStatus()
                });
            }
            tabLoan.setModel(m);
        } else {
        JOptionPane.showMessageDialog(
                null, "Nenhum registro encontrado."
            );
        }         
    }//GEN-LAST:event_rbnAvailableActionPerformed

    private void rbnNotAvailableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbnNotAvailableActionPerformed
        // TODO add your handling code here:
        configureTable();
        List<Loan> lista = new LoanDAO()
            .searchByStatusNotReturned();
        if (lista.size() > 0) {
            DefaultTableModel m = (DefaultTableModel) tabLoan.getModel();
            for (Loan loan : lista) {
                m.addRow(new Object[]{
                    loan.getId(),
                    loan.getDateBorrow(),
                    loan.getDateReturn(),
                    loan.getId_book(),
                    loan.getId_user(),
                    loan.getStatus()
                });
            }
            tabLoan.setModel(m);
        } else {
        JOptionPane.showMessageDialog(
                null, "Nenhum registro encontrado."
            );
        }    
    }//GEN-LAST:event_rbnNotAvailableActionPerformed

    private void formAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_formAncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_formAncestorAdded

    private void formInternalFrameIconified(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameIconified
        // TODO add your handling code here:
    }//GEN-LAST:event_formInternalFrameIconified

    private void formHierarchyChanged(java.awt.event.HierarchyEvent evt) {//GEN-FIRST:event_formHierarchyChanged
    }//GEN-LAST:event_formHierarchyChanged

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        // TODO add your handling code here:
    }//GEN-LAST:event_formInternalFrameOpened

    private void formInternalFrameClosing(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosing
        // TODO add your handling code here:
    }//GEN-LAST:event_formInternalFrameClosing


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblPesquisar;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JRadioButton rbnAvailable;
    private javax.swing.JRadioButton rbnNotAvailable;
    private javax.swing.JRadioButton rdbBook;
    private javax.swing.JRadioButton rdbId;
    private javax.swing.JRadioButton rdbUser;
    private javax.swing.JTable tabLoan;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables
    
    private void configureButtonGroup() {

        ButtonGroup bg = new ButtonGroup();

        bg.add(rdbId);
        bg.add(rbnAvailable);
        bg.add(rbnNotAvailable);
        bg.add(rdbUser);
        bg.add(rdbBook);

        rdbId.setSelected(true);
    }
    
    private void fillTable(List<Loan> loanList) {
        
        if (loanList.size() > 0) {
            DefaultTableModel m = (DefaultTableModel) tabLoan.getModel();
            for (Loan loan : loanList) {
                m.addRow(new Object[]{
                    loan.getId(),
                    loan.getDateBorrow(),
                    loan.getDateReturn(),
                    loan.getId_book(),
                    loan.getId_user(),
                    loan.getStatus()
                });
            }
            tabLoan.setModel(m);
        } else {
            JOptionPane.showMessageDialog(
                    null, "Nenhum registro encontrado."
            );
        }
    }

    private void configureTable() {
        DefaultTableModel m = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        m.addColumn("Id");
        m.addColumn("Data Empréstimo");
        m.addColumn("Data de Entrega");
        m.addColumn("Id Livro");
        m.addColumn("Id Usuário");
        m.addColumn("Status");

        m.setNumRows(0);
        tabLoan.setModel(m);
    }
    
    private void updateTableLoan(){
        List<Loan> loanListId = new LoanDAO().listById();
        fillTable(loanListId);
    }
}
